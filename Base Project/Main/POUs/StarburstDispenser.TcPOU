<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="StarburstDispenser" Id="{0b1de97b-16c5-08d3-29a7-e99e21337a19}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK StarburstDispenser
VAR_INPUT
	mover : Mover;
	timer : TON;
	station_num : INT;
	dispense : BOOL;
	Axis : FB_BasicAxis;
END_VAR
VAR_OUTPUT
	completed : BOOL;
END_VAR
VAR
	aAmount: ARRAY[1..3] OF INT;
	i: INT;
	temp : Payload_TYP;
	seconds: TIME;
	inposition : BOOL := Axis.InPosition;
	count : INT := 0;
	pos : LREAL := Axis.ActualPosition;
	movedistance: LREAL;
	veloc : LREAL := 6000.0;
	state: INT := 0;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[

completed := FALSE;

//take ou for
// add case




IF dispense THEN
	temp := mover.Payload;
	aAmount[1] := temp.Red;
	aAmount[2] := temp.Orange;
	aAmount[3] := temp.Pink;
	movedistance := (360) * aAmount[station_num];
	
	CASE station_num OF
		
		1: 
			
			Axis.Velocity := 600;
			Axis.MoveRelative(360, TRUE);

		2:
			//motor 2 logic
			timer(IN := TRUE, PT := seconds);
			
		3:
			//motor 3 logic
			timer(IN := TRUE, PT := seconds);
			
		4:
				completed := TRUE;
				Axis.Stop();
		
	END_CASE
END_IF

completed := Timer.Q;
//completed := Axis.InPosition;

IF NOT dispense THEN
	TIMER(IN := FALSE);
	Axis.Stop();
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="StarburstDispenser">
      <LineId Id="26" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="373" Count="43" />
      <LineId Id="190" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>